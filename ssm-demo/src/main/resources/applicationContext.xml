<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/aop
	                    http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

    <!-- 自动扫描 -->
    <context:component-scan base-package="com.ljz"/>

    <!-- test -->
    <bean id="PersonBean" class="com.ljz.model.Person">
        <property name="userName" value="ljz"/>
        <property name="password" value="123456"/>
        <property name="age" value="29"/>
    </bean>

    <bean id="customerService" class="com.ljz.test.advice.CustomerService">
        <property name="name" value="ljz hahaha"/>
        <property name="url" value="http://www.yiibai.com"/>
    </bean>

    <bean id="hijackBeforeMethodBean" class="com.ljz.test.advice.HijackBeforeMethod"/>
    <bean id="hijackAfterMethodBean" class="com.ljz.test.advice.HijackAfterMethod"/>
    <bean id="hijackThrowExceptionBean" class="com.ljz.test.advice.HijackThrowException"/>
    <bean id="hijackAroundMethodBean" class="com.ljz.test.advice.HijackAroundMethod"/>

    <bean id="customerServiceProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="customerService"/>
        <property name="interceptorNames">
            <list>
                <value>hijackBeforeMethodBean</value>
            </list>
        </property>
    </bean>

    <bean id="customerServiceProxy2" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="customerService"/>
        <property name="interceptorNames">
            <list>
                <value>hijackAfterMethodBean</value>
            </list>
        </property>
    </bean>

    <bean id="customerServiceProxy3" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="customerService"/>
        <property name="interceptorNames">
            <list>
                <value>hijackThrowExceptionBean</value>
            </list>
        </property>
    </bean>

    <bean id="customerServiceProxy4" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="customerService"/>
        <property name="interceptorNames">
            <list>
                <value>hijackAroundMethodBean</value>
            </list>
        </property>
    </bean>

    <!-- aop and aspectJ-->
    <!-- 自动为切面方法中匹配的方法所在的类生成代理对象。 -->
    <aop:aspectj-autoproxy />
    <!-- 配置自动扫描的包 -->
    <context:component-scan base-package="com.ljz.test.aop_aspectJ" />

    <!-- 配置基于注解的声明式事务 -->
    <!--<tx:annotation-driven transaction-manager="transactionManager" />-->
</beans>