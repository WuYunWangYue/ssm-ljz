<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
         http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">

    <!--
    web.xml 的加载顺序是：
    ServletContext-> context-param ->listener -> filter -> servlet，
    而同个类型之间的实际程序调用的时候的顺序是根据对应的 mapping 的顺序进行调用的。
    -->

    <!--    <disciption>Tomcat Example servletsand JSPpages.</disciption>
        <span style="font-family: Arial; font-size: 14px; line-height: 26px;">
            <display-name></display-name>定义站台的名称
        </span>-->

    <display-name>Archetype Created Web Application</display-name>

    <!-- 在servlet里面可以通过 getServletContext().getInitParameter(“context/param”)得到 -->
    <!-- 加载 Spring和mybatis的配置文件 及 Spring security的配置文件 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:spring-mybatis.xml
            classpath:spring-security.xml
        </param-value>
    </context-param>

    <!--    &lt;!&ndash; 加载 Spring security的配置文件 &ndash;&gt;
        <context-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-security.xml</param-value>
        </context-param>-->

    <!-- Spring 容器启动监听器 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- 防止Spring内存溢出监听器 -->
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>

    <!-- 编码过滤器 -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <async-supported>true</async-supported>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- Spring security 过滤器链配置-->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>controllerContext</filter-name>
        <filter-class>com.ljz.filter.ControllerContextFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>controllerContext</filter-name>
        <url-pattern>/main/*</url-pattern>
    </filter-mapping>

    <!-- Spring MVC servlet -->
    <servlet>
        <servlet-name>SpringMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported>
    </servlet>
    <servlet-mapping>
        <servlet-name>SpringMVC</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!-- 系统指定欢迎页面 -->
    <welcome-file-list>
        <welcome-file>/index.jsp</welcome-file>
    </welcome-file-list>

    <!-- 错误界面的配置 -->
    <error-page>
        <error-code>404</error-code>
        <location>/404.jsp</location>
    </error-page>

    <!-- 通过异常的类型配置 -->
    <error-page>
        <exception-type>java.lang.NullException</exception-type>
        <location>/error.jsp</location>
    </error-page>

    <!-- 会话超时配置（单位为分钟） -->
    <session-config>
        <session-timeout>15</session-timeout>
    </session-config>

    <!-- Demo -->
    <!-- 配置监听器 -->
    <!--    <listener>
            <listener-class>com.ljz.test.listener.ListenerTest</listener-class>
        </listener>-->

    <!-- 配置过滤器 -->
<!--    <filter>
        <filter-name>FilterTest</filter-name>
        <filter-class>com.ljz.test.filter.FilterTest</filter-class>
        <init-param>
            <description>FilterTest</description>
            <param-name>ljz</param-name>
            <param-value>123</param-value>
        </init-param>

        <init-param>
            <description>配置FilterTest过滤器的初始化参数</description>
            <param-name>like</param-name>
            <param-value>java</param-value>
        </init-param>
    </filter>
    &lt;!&ndash; 映射过滤器 &ndash;&gt;
    <filter-mapping>
        <filter-name>FilterTest</filter-name>
        &lt;!&ndash; “/*”表示拦截所有的请求 &ndash;&gt;
        <url-pattern>/*</url-pattern>
    </filter-mapping>-->

</web-app>  